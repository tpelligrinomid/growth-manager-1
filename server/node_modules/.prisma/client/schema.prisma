// This is your Prisma schema file

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                       String          @id @default(uuid())
  accountName              String
  businessUnit             BusinessUnit
  engagementType           EngagementType
  priority                 Priority
  accountManager           String
  teamManager              String
  relationshipStartDate    DateTime
  contractStartDate        DateTime
  contractRenewalEnd       DateTime
  services                 Service[]
  pointsPurchased          Int
  pointsDelivered          Int
  delivery                 String
  recurringPointsAllotment Int
  mrr                      Int
  growthInMrr              Int
  potentialMrr             Int
  website                  String?
  linkedinProfile          String?
  industry                 String
  annualRevenue            Int
  employees                Int
  goals                    Goal[]
  tasks                    Task[]
  clientContacts           ClientContact[]
  pointsStrikingDistance   Int             @default(0)
}

model Goal {
  id          String   @id @default(uuid())
  account     Account  @relation(fields: [accountId], references: [id])
  accountId   String
  description String
  status      String
  dueDate     DateTime
  progress    Int
}

model ClientContact {
  id        String  @id @default(uuid())
  account   Account @relation(fields: [accountId], references: [id])
  accountId String
  firstName String
  lastName  String
  title     String
  email     String
}

enum BusinessUnit {
  NEW_NORTH
  IDEOMETRY
  MOTION
  SPOKE
}

enum EngagementType {
  STRATEGIC
  TACTICAL
}

enum Priority {
  TIER_1
  TIER_2
  TIER_3
  TIER_4
}

enum Service {
  ABM
  PAID
  CONTENT
  SEO
  REPORTING
  SOCIAL
  WEBSITE
}

enum Role {
  GROWTH_MANAGER
  ADMINISTRATOR
  GROWTH_ADVISOR
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  googleId  String   @unique
  role      Role     @default(GROWTH_ADVISOR)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Task {
  id          String     @id @default(cuid())
  name        String
  description String?
  status      TaskStatus
  assignee    String?
  createdAt   DateTime   @default(now())
  dueDate     DateTime?
  completedAt DateTime?
  account     Account    @relation(fields: [accountId], references: [id])
  accountId   String
}

enum TaskStatus {
  NOT_STARTED
  IN_PROGRESS
  COMPLETED
}
